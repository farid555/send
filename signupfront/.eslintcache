[{"/Users/farid/Desktop/signup/send/signupfront/src/index.js":"1","/Users/farid/Desktop/signup/send/signupfront/src/App.js":"2","/Users/farid/Desktop/signup/send/signupfront/src/components/Header.js":"3","/Users/farid/Desktop/signup/send/signupfront/src/components/Footer.js":"4","/Users/farid/Desktop/signup/send/signupfront/src/Cads/CardUI.jsx":"5","/Users/farid/Desktop/signup/send/signupfront/src/Cads/Cards.jsx":"6"},{"size":176,"mtime":1611213410789,"results":"7","hashOfConfig":"8"},{"size":3939,"mtime":1612269342319,"results":"9","hashOfConfig":"8"},{"size":579,"mtime":1612224870247,"results":"10","hashOfConfig":"8"},{"size":359,"mtime":1611215367361,"results":"11","hashOfConfig":"8"},{"size":843,"mtime":1612223834512,"results":"12","hashOfConfig":"8"},{"size":2050,"mtime":1612224988298,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"prawzo",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"16"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"/Users/farid/Desktop/signup/send/signupfront/src/index.js",[],["29","30"],"/Users/farid/Desktop/signup/send/signupfront/src/App.js",[],"/Users/farid/Desktop/signup/send/signupfront/src/components/Header.js",["31"],"import React from 'react'\nimport { Navbar, Nav, Container } from 'react-bootstrap'\n\nconst Header = () => {\n    return (\n        <header>\n            <Navbar bg=\"primary\" variant=\"dark\">\n                <Navbar.Brand href=\"#home\">PHOTOZONE</Navbar.Brand>\n                <Nav className=\"mr-auto\">\n                    <Nav.Link href=\"#home\">Home</Nav.Link>\n                    <Nav.Link href=\"#features\">About</Nav.Link>\n                    <Nav.Link href=\"#pricing\">Contact</Nav.Link>\n                </Nav>\n\n\n            </Navbar>\n        </header>\n    )\n}\n\nexport default Header","/Users/farid/Desktop/signup/send/signupfront/src/components/Footer.js",[],"/Users/farid/Desktop/signup/send/signupfront/src/Cads/CardUI.jsx",["32"],"import React from 'react'\n\n\nconst Card = props => {\n    return (\n        <div classsName=\"card.text-center .justify-content-center\">\n            <div className=\"overflow\">\n                <img src={props.imgsrc} alt=\"Farid\" className=\"card-img-top\" />\n                <div className=\"card-body text-dark\">\n                    <h4 className=\"card-title\">{props.title}</h4>\n                    <p className=\"card-text text-secondary\">\n                        Lorem ipsum dolor sit amet, consectetur adipisicing elit.\n                        Tempore eaque architecto molestias nemo iste, numquam soluta\n                        autem explicabo.\n                         </p>\n                    <a href=\"#\" className=\"btn btn-outline-success\">Go Anywhere</a>\n\n                </div>\n            </div>\n        </div>\n\n    )\n\n}\nexport default Card;","/Users/farid/Desktop/signup/send/signupfront/src/Cads/Cards.jsx",[],{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","severity":1,"message":"38","line":2,"column":23,"nodeType":"39","messageId":"40","endLine":2,"endColumn":32},{"ruleId":"41","severity":1,"message":"42","line":16,"column":21,"nodeType":"43","endLine":16,"endColumn":69},"no-native-reassign",["44"],"no-negated-in-lhs",["45"],"no-unused-vars","'Container' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]